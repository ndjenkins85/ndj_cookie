[tool.poetry]
name = "my_project"
version = "0.2.0"
description = "Personal python project quick starter example."
license = "MIT"
authors = ["Nick Jenkins"]
readme = "README.md"
homepage = "https://www.nickjenkins.com.au/"
repository = "https://github.com/ndjenkins85/ndj_cookie/"
documentation = "https://ndjenkins85.github.io/ndj_cookie/"
keywords = [
    "quick_start",
    "best_practice",
    "python_packaging",
    ]
classifiers = [
    "Development Status :: 4 - Beta",
    "License :: OSI Approved :: MIT License",
    "Intended Audience :: Developers",
    "Intended Audience :: Education",
    "Programming Language :: Python :: 3 :: Only",
    "Topic :: Documentation",
    "Topic :: Documentation :: Sphinx",
    "Topic :: Education :: Testing",
    "Topic :: Software Development :: Build Tools",
    "Topic :: Software Development :: Documentation",
    "Topic :: Software Development :: Libraries",
    "Topic :: Utilities",
]
include = ["LICENSE", "README.md"]

[tool.poetry.dependencies]
python = ">=3.7.1,<3.11"
pandas = "^1.3.4"
numpy = "^1.21.4"
sklearn = "^0.0"
matplotlib = "^3.5.0"
seaborn = "^0.11.2"

pandera = {extras = ["io"], version = "^0.8.0"}
black = "^21.9b0"
PyYAML = "^6.0"
frictionless = "^4.22.0"

darglint = { version = "^0.1", optional = true }
flake8 = { version = "^4.0", optional = true }
flake8-annotations = { version = "^2.7", optional = true }
flake8-bandit = { version = "^2.1", optional = true }
flake8-bugbear = { version = "^21.9", optional = true }
flake8-builtins = { version = "^1.5", optional = true }
flake8-docstrings = { version = "^1.6", optional = true }
mypy = { version = "^0.910", optional = true }
safety = { version = "^1.10", optional = true }
sqlfluff = { version = "^0.6", optional = true }
xdoctest = { version = "^0.15", optional = true }
types-PyYAML = { version = "^6.0", optional = true }

pytest = { version = "^6.2", optional = true }
pytest-cases = { version = "^3.6", optional = true }
pytest-cov = { version = "^3.0", optional = true }
coverage = { version = "^6.1", optional = true }
codecov = { version = "^2.1", optional = true }

m2r2 = { version = "^0.3", optional = true }
sphinx = { version = "^4.2", optional = true }
sphinx-autodoc-typehints = { version = "^1.12", optional = true }
sphinx_rtd_theme = { version = "^1", optional = true }

[tool.poetry.dev-dependencies]
jupyter = "^1.0.0"
nox = "^2021.10.1"
pre-commit = "^2.15"
MarkupSafe = "^2.0.1"

[tool.poetry.extras]
lint = ["black", "darglint", "flake8", "mypy", "safety", "sqlfluff", "xdoctest", "flake8-annotations", "flake8-bandit", "flake8-bugbear", "flake8-builtins", "flake8-docstrings", "types-PyYAML"]
tests = ["pytest", "pytest-cases", "pytest-cov", "coverage", "codecov"]
docs = ["m2r2", "sphinx", "sphinx_rtd_theme", "sphinx-autodoc-typehints"]

[tool.poetry.scripts]
my_project = 'my_project.utils:start'

[tool.poetry-version-plugin]
source = "init"

[build-system]
# Keep poetry version same as in github actions and Dockerfile
requires = ["setuptools", "poetry>=1.1.9"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 120

[tool.isort]
profile = "black"
known_local_folder = ["my_project"]
skip_glob = [
    "my_project/__init__.py",
    ]

[tool.mypy]
python_version = 3.8

[[tool.mypy.overrides]]
module = [
    'sphinx_rtd_theme',
    'nox.*',
    'pytest',
    'matplotlib.*',
    'seaborn.*',
    'sklearn.*',
    ]
ignore_missing_imports = true

[tool.coverage.run]
parallel = true
source = [
    "my_project",
    "tests",
    "noxfile.py",
    "docs/conf.py"
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "@overload",
    'if __name__ == "__main__":',
    "if TYPE_CHECKING:",
]
